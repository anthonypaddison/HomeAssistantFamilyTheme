title: Family Board
theme: FamilyBoard

# ---------- Button-card templates (GLOBAL) ----------
button_card_templates:
  # Progress chip: shows done vs total (done + remaining incomplete)
  # - variables.todo:  entity_id of the todo list (e.g. todo.anthony)
  # - variables.completed: entity_id of input_number for "completed today"
  # - variables.color: CSS color token (e.g. var(--palette-lilac))
  progress_chip:
    show_name: true
    show_state: false
    styles:
      card:
        - padding: 8px 12px
        - border-radius: 16px
        - min-width: 120px
      grid:
        - grid-template-areas: '"i n" "bar bar"'
        - grid-template-columns: 28px 1fr
        - grid-template-rows: auto auto
      name:
        - justify-self: start
        - font-weight: 700
      icon:
        - width: 22px
        - color: '[[[ return variables.color || "var(--primary-color)"; ]]]'
    custom_fields:
      bar: >
        [[[
          const done   = Number(states[variables.completed]?.state || 0);
          const remain = Number(states[variables.todo]?.state || 0);
          const total  = Math.max(0, done + remain);
          const pct    = Math.min(100, Math.round((done/total)*100));
          const label  = `${done}/${total}`;
          return `
            <div style="z-index: 1000;margin-top:6px;height:16px;border-radius:4px;background:rgba(0,0,0,0.1);position:relative;">
              <div style="position:absolute;left:0;top:0;height:16px;width:${pct}%;background:${getComputedStyle(document.documentElement).getPropertyValue('--primary-text-color')};opacity:.15;border-radius:4px;"></div>
              <div style="position:absolute;left:0;top:0;height:16px;width:${pct}%;background:${variables.color || 'var(--primary-color)'};border-radius:4px;"></div>
              <div style="margin:2px;font-size:12px;font-weight:700;color:var(--secondary-text-color);">${label}</div>
            </div>`;
        ]]]

  sb_icon_only:
    show_name: false
    show_label: false
    # Layout: icon (i) + count (c) on a single row
    styles:
      card:
        - border-radius: 0px
        - box-shadow: none
        - width: 100px
        - height: 100px
        - padding: 6px
        - margin: 0
        - background: >
            [[[
              const active = states['input_select.family_section']?.state === variables.section;
              return active ? '#FFFFFF' : 'transparent';
            ]]]
      grid:
        - grid-template-areas: '"i c"'
        - grid-template-columns: 1fr auto
        - grid-template-rows: 1fr
        - align-items: center
      icon:
        # Centered both ways; size can be tuned if needed
        - width: 50px
        - height: 50px
        - justify-self: center
        - align-self: center
        - color: >
            [[[
              const active = states['input_select.family_section']?.state === variables.section;
              // Active: blackish; Inactive: bluish-grey (uses your theme's state icon color)
              return active ? '#0F172A' : 'var(--state-icon-color)';
            ]]]
      custom_fields:
        count:
          - align-self: center
          - justify-self: end
          - font-weight: 700
          - font-size: 14px
          - width: 1.5em
          - text-align: center
          - background: var(--palette-rose)
          - height: 1.5em
          - border-radius: 50%
          - border: >
              [[[
                const active = states['input_select.family_section']?.state === variables.section;
                // Keep count legible in both states
                return active ? '1px solid #0F172A' : '1px solid var(--state-icon-color)';
              ]]]
          - color: >
              [[[
                const active = states['input_select.family_section']?.state === variables.section;
                // Keep count legible in both states
                return active ? '#0F172A' : 'var(--state-icon-color)';
              ]]]
    custom_fields:
      count: >
        [[[
          const eid = variables.badge_entity;
          if (!eid) return null;
          const raw = states[eid]?.state ?? null;
          const val = Number.isFinite(+raw) ? String(+raw) : String(raw);
          if (!val || val === '0') return null;
          return val;
        ]]]


# ---------- View ----------
views:
  - title: Family
    path: family
    type: custom:grid-layout
    layout:
      padding: 0px
      grid-template-columns: 100px 1fr
      grid-template-rows: auto 1fr
      grid-template-areas: |
        "sidebar heading"
        "sidebar chips"
        "sidebar main"
      gap: 0px
      column-gap: 0px
      row-gap: 0px
    mediaquery:
      "(max-width: 900px)":
        grid-template-columns: 1fr
        grid-template-areas: |
          "chips"
          "main"

    cards:
      # =========================
      # 1) SIDEBAR (sticky)
      # =========================
      - !include /config/dashboards/includes/sidebar_menu.yaml

      # =========================
      # 2) CHIPS ROW (top)
      # =========================
      - type: custom:mod-card
        view_layout: { grid-area: chips }
        card_mod:
          style: |
            ha-card {
              background: var(--palette-sky) !important;
              border-radius: 0 !important;
              margin: 0 !important;
              padding: 8px 12px !important;
            }
        card:
          type: horizontal-stack
          cards:
            # Family
            - type: custom:button-card
              template: progress_chip
              icon: mdi:account-group
              name: Family
              variables:
                todo: todo.family
                completed: input_number.completed_family_today
                color: var(--palette-mint)

            # Anthony (code/computer)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:laptop
              name: Anthony
              variables:
                todo: todo.anthony
                completed: input_number.completed_anthony_today
                color: var(--palette-lilac)

            # Joy (book)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:book-open-variant
              name: Joy
              variables:
                todo: todo.joy
                completed: input_number.completed_joy_today
                color: var(--palette-vanilla)

            # Lizzie (teddy)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:teddy-bear
              name: Lizzie
              variables:
                todo: todo.lizzie
                completed: input_number.completed_lizzie_today
                color: var(--palette-rose)

            # Toby (football)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:soccer
              name: Toby
              variables:
                todo: todo.toby
                completed: input_number.completed_toby_today
                color: var(--palette-sky)
      # =========================
      # 2) CHIPS ROW (top)
      # =========================
      - type: custom:mod-card
        view_layout: { grid-area: heading }
        card_mod:
          style: |
            ha-card {
              background: var(--palette-sky) !important;
              border-radius: 0 !important;
              margin: 0 !important;
              padding: 8px 12px !important;
            }
        card:
          type: horizontal-stack
          cards:
            # Family
            - type: custom:button-card
              template: progress_chip
              icon: mdi:account-group
              name: Family
              variables:
                todo: todo.family
                completed: input_number.completed_family_today
                color: var(--palette-mint)

            # Anthony (code/computer)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:laptop
              name: Anthony
              variables:
                todo: todo.anthony
                completed: input_number.completed_anthony_today
                color: var(--palette-lilac)

            # Joy (book)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:book-open-variant
              name: Joy
              variables:
                todo: todo.joy
                completed: input_number.completed_joy_today
                color: var(--palette-vanilla)

            # Lizzie (teddy)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:teddy-bear
              name: Lizzie
              variables:
                todo: todo.lizzie
                completed: input_number.completed_lizzie_today
                color: var(--palette-rose)

            # Toby (football)
            - type: custom:button-card
              template: progress_chip
              icon: mdi:soccer
              name: Toby
              variables:
                todo: todo.toby
                completed: input_number.completed_toby_today
                color: var(--palette-sky)

      # =========================
      # 3) MAIN AREA (conditional views)
      # =========================
      - type: vertical-stack
        view_layout: { grid-area: main }
        cards:
          # --- Calendar ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Calendar
            card: !include /config/dashboards/includes/calendar_5day.yaml

          # --- Chores: adults (3 columns) + kids (2 columns) ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Chores
            card:
              type: vertical-stack
              cards:
                # Adults row (scrollable lists, quick toggle, hide completed)
                - type: grid
                  columns: 3
                  square: false
                  cards:
                    - type: todo-list
                      entity: todo.anthony
                      title: Anthony
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                    - type: todo-list
                      entity: todo.joy
                      title: Joy
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                    - type: todo-list
                      entity: todo.family
                      title: Family
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                # Kids row (keep completed visible for easy undo)
                - type: grid
                  columns: 2
                  square: false
                  cards:
                    - type: todo-list
                      entity: todo.lizzie
                      title: Lizzie
                      hide_completed: false
                      item_tap_action: toggle

                    - type: todo-list
                      entity: todo.toby
                      title: Toby
                      hide_completed: false
                      item_tap_action: toggle

          # --- Photos ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Photos
            card:
              type: media-browser

          # --- Lists ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Lists
            card:
              type: todo-list
              entity: todo.family
              title: Lists

      # =========================
      # 4) FAB (context-aware popup)
      # =========================
      - type: button
        view_layout: { grid-area: main }
        icon: mdi:plus
        name: Add
        show_name: false
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: script.family_fab_open
            data: { browser_id: THIS }
        card_mod:
          style: |
            ha-card {
              position: fixed !important;
              right: 24px !important;
              bottom: 24px !important;
              width: 56px !important;
              height: 56px !important;
              border-radius: 28px !important;
              box-shadow: 0 8px 24px rgba(0,0,0,0.22) !important;
              color: #000 !important;
              z-index: 1000 !important;
              background: [[[
                const s = states['input_select.family_section']?.state || 'Calendar';
                if (s === 'Calendar') return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-calendar');
                if (s === 'Chores')   return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-chores');
                return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-default');
              ]]];
            }