title: Family Board
theme: FamilyBoard
button_card_templates:
  sidebar_item:
    show_label: true
    show_state: false
    styles:
      card:
        - border-radius: 12px
        - padding: 5px
        - margin: 3px
        - background: >
            [[[
              const active = states['input_select.family_section']?.state === variables.section;
              return active ? 'var(--primary-color)' : 'var(--card-background-color)';
            ]]]
        - color: var(--primary-text-color)
        - width: 100%
      name: [justify-self: start, font-weight: 600]
      label:
        - justify-self: end
        - font-weight: 700
        - background: rgba(0,0,0,0.15)
        - padding: 2px 8px
        - border-radius: 999px

views:
  - title: Family
    path: family
    type: custom:grid-layout
    layout:
      padding: 0px
      # 10% fixed sidebar + flexible main
      grid-template-columns: 10% 1fr
      grid-template-rows: auto 1fr
      grid-template-areas: |
        "sidebar chips"
        "sidebar main"

      # Stack on small screens (sidebar collapses; chips then main)
      mediaquery:
        "(max-width: 900px)":
          grid-template-columns: 1fr
          grid-template-areas: |
            "chips"
            "main"

    cards:
      # =========================
      # 1) SIDEBAR (sticky)
      # =========================
      - !include /config/dashboards/includes/sidebar_menu.yaml

      # =========================
      # 2) CHIPS ROW (top)
      # =========================
      - type: custom:mod-card
        view_layout: { grid-area: chips }
        card:
          type: horizontal-stack
          cards:
            # Family
            - type: custom:button-card
              icon: mdi:account-group
              name: Family
              variables:
                done:    '[[[ return Number(states["input_number.completed_family_today"]?.state||0); ]]]'
                remain:  '[[[ return Number(states["todo.family"]?.state||0); ]]]'
                color:   'var(--palette-mint)'
              template: progress_chip

            # Anthony
            - type: custom:button-card
              icon: mdi:laptop
              name: Anthony
              variables:
                done:    '[[[ return Number(states["input_number.completed_anthony_today"]?.state||0); ]]]'
                remain:  '[[[ return Number(states["todo.anthony"]?.state||0); ]]]'
                color:   'var(--palette-lilac)'
              template: progress_chip

            # Joy
            - type: custom:button-card
              icon: mdi:book-open-variant
              name: Joy
              variables:
                done:    '[[[ return Number(states["input_number.completed_joy_today"]?.state||0); ]]]'
                remain:  '[[[ return Number(states["todo.joy"]?.state||0); ]]]'
                color:   'var(--palette-vanilla)'
              template: progress_chip

            # Lizzie
            - type: custom:button-card
              icon: mdi:teddy-bear
              name: Lizzie
              variables:
                done:    '[[[ return Number(states["input_number.completed_lizzie_today"]?.state||0); ]]]'
                remain:  '[[[ return Number(states["todo.lizzie"]?.state||0); ]]]'
                color:   'var(--palette-rose)'
              template: progress_chip

            # Toby
            - type: custom:button-card
              icon: mdi:soccer
              name: Toby
              variables:
                done:    '[[[ return Number(states["input_number.completed_toby_today"]?.state||0); ]]]'
                remain:  '[[[ return Number(states["todo.toby"]?.state||0); ]]]'
                color:   'var(--palette-sky)'
              template: progress_chip

          button_card_templates:
            progress_chip:
              show_state: false
              styles:
                card:
                  - padding: 8px 12px
                  - border-radius: 16px
                  - min-width: 120px
                grid:
                  - grid-template-areas: '"i n" "bar bar"'
                  - grid-template-columns: 28px 1fr
                  - grid-template-rows: auto auto
                name:
                  - justify-self: start
                  - font-weight: 700
                icon:
                  - color: "[[[ return variables.color; ]]]"
                  - width: 22px
              custom_fields:
                bar: >
                  [[[
                    const done   = Number(variables.done  || 0);
                    const remain = Number(variables.remain|| 0);
                    const total  = Math.max(1, done + remain);
                    const pct    = Math.min(100, Math.round((done/total)*100));
                    const label  = `${done}/${total}`;
                    return `
                      <div style="
                        margin-top:6px;height:8px;border-radius:4px;
                        background: rgba(0,0,0,0.1); position:relative;">
                        <div style="
                          position:absolute;left:0;top:0;height:8px;
                          width:${pct}%;
                          background:${getComputedStyle(document.documentElement)
                              .getPropertyValue('--primary-text-color')};
                          opacity:0.15;border-radius:4px;"></div>
                        <div style="
                          position:absolute;left:0;top:0;height:8px;
                          width:${pct}%; background:${variables.color};
                          border-radius:4px;"></div>
                        <div style="
                          position:absolute;right:6px;top:-16px;
                          font-size:12px;font-weight:700;color:var(--secondary-text-color);">${label}</div>
                      </div>`;
                  ]]]

      # =========================
      # 3) MAIN AREA (conditional)
      # =========================
      - type: vertical-stack
        view_layout: { grid-area: main }
        cards:
          # --- Calendar ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Calendar
            card: !include /config/dashboards/includes/calendar_5day.yaml

          # --- Chores (multiple lists) ---
          # --- CHORES ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Chores
            card:
              type: vertical-stack
              cards:
                # Adults row (3 columns)
                - type: grid
                  columns: 3
                  square: false
                  cards:
                    - type: todo-list
                      entity: todo.anthony
                      title: Anthony
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                    - type: todo-list
                      entity: todo.joy
                      title: Joy
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                    - type: todo-list
                      entity: todo.family
                      title: Family
                      hide_completed: true
                      item_tap_action: toggle
                      card_mod:
                        style: |
                          ha-card { max-height: 44vh; overflow: auto; }

                # Kids row (2 columns, keep completed visible for easy undo)
                - type: grid
                  columns: 2
                  square: false
                  cards:
                    - type: todo-list
                      entity: todo.lizzie
                      title: Lizzie
                      hide_completed: false        # don't hide to allow easy undo
                      item_tap_action: toggle

                    - type: todo-list
                      entity: todo.toby
                      title: Toby
                      hide_completed: false
                      item_tap_action: toggle

          # --- Photos (browse your configured media/photos) ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Photos
            card:
              type: media-browser

          # --- Lists (generic list) ---
          - type: conditional
            conditions:
              - entity: input_select.family_section
                state: Lists
            card:
              type: todo-list
              entity: todo.family
              title: Lists

      # =========================
      # 4) FAB (context-aware popup)
      # =========================
      - type: button
        view_layout: { grid-area: main }
        icon: mdi:plus
        name: Add
        show_name: false
        tap_action:
          action: fire-dom-event
          browser_mod:
            service: script.family_fab_open
            data: { browser_id: THIS }
        card_mod:
          style: |
            ha-card {
              position: fixed !important;
              right: 24px !important;
              bottom: 24px !important;
              width: 56px !important;
              height: 56px !important;
              border-radius: 28px !important;
              box-shadow: 0 8px 24px rgba(0,0,0,0.22) !important;
              color: #000 !important;
              z-index: 1000 !important;
              background: [[[
                const s = states['input_select.family_section']?.state || 'Calendar';
                if (s === 'Calendar') return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-calendar');
                if (s === 'Chores')   return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-chores');
                return getComputedStyle(document.documentElement)
                  .getPropertyValue('--fab-color-default');
              ]]];
            }