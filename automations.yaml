- alias: UI - Set FamilyBoard theme at startup
  trigger: { platform: homeassistant, event: start }
  action:
    - service: frontend.set_theme
      data: { name: FamilyBoard }

- alias: To-do - Increment completed counter (on complete)
  id: todo_increment_completed_on_complete
  mode: parallel
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: todo
        service: update_item
  variables:
    svc: "{{ trigger.event.data.service_data }}"
    # entity_id in call_service is a list; get first element
    list_entity: "{{ (svc.entity_id | default([])) | first | default('') }}"
    status: "{{ svc.status | default('') }}"
  condition:
    - condition: template
      value_template: "{{ status == 'completed' }}"
    - condition: template
      value_template: >
        {{ list_entity in [
           'todo.family','todo.anthony','todo.joy','todo.lizzie','todo.toby'
        ] }}
  action:
    - choose:
        - conditions: "{{ list_entity == 'todo.family' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_family_today }
        - conditions: "{{ list_entity == 'todo.anthony' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_anthony_today }
        - conditions: "{{ list_entity == 'todo.joy' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_joy_today }
        - conditions: "{{ list_entity == 'todo.lizzie' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_lizzie_today }
        - conditions: "{{ list_entity == 'todo.toby' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_toby_today }
- alias: To-do - Decrement completed counter (on uncomplete)
  id: todo_decrement_completed_on_uncomplete
  mode: parallel
  trigger:
    - platform: event
      event_type: call_service
      event_data:
        domain: todo
        service: update_item
  variables:
    svc: "{{ trigger.event.data.service_data }}"
    list_entity: "{{ (svc.entity_id | default([])) | first | default('') }}"
    status: "{{ svc.status | default('') }}"
  condition:
    - condition: template
      value_template: "{{ status == 'needs_action' }}"
    - condition: template
      value_template: >
        {{ list_entity in [
           'todo.family','todo.anthony','todo.joy','todo.lizzie','todo.toby'
        ] }}
  action:
    - choose:
        - conditions: "{{ list_entity == 'todo.family' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_family_today }
        - conditions: "{{ list_entity == 'todo.anthony' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_anthony_today }
        - conditions: "{{ list_entity == 'todo.joy' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_joy_today }
        - conditions: "{{ list_entity == 'todo.lizzie' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_lizzie_today }
        - conditions: "{{ list_entity == 'todo.toby' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_toby_today }
- alias: To-do - Reset completed counters at midnight
  id: todo_reset_completed_counters_midnight
  mode: single
  trigger:
    - platform: time
      at: "00:00:00"
  action:
    - service: input_number.set_value
      target:
        entity_id:
          - input_number.completed_family_today
          - input_number.completed_anthony_today
          - input_number.completed_joy_today
          - input_number.completed_lizzie_today
          - input_number.completed_toby_today
      data:
        value: 0

- alias: Calendar - Count today's events (all family calendars)
  id: calendar_count_events_today
  mode: single
  trigger:
    - platform: time_pattern
      minutes: "/15"              # refresh every 15 min
    - platform: time
      at: "00:01:00"              # reset near midnight
  action:
    - variables:
        start: "{{ today_at().isoformat() }}"
        end:   "{{ (today_at() + timedelta(days=1)).isoformat() }}"
    - service: calendar.get_events
      target:
        entity_id:
          - calendar.family
          - calendar.anthony
          - calendar.joy
          - calendar.lizzie
          - calendar.toby
      data:
        start_date_time: "{{ start }}"
        end_date_time:   "{{ end }}"
      response_variable: agenda
    - service: input_number.set_value
      target: { entity_id: input_number.events_today }
      data:
        value: >-
          {{
            (agenda['calendar.family'].events   | count) +
            (agenda['calendar.anthony'].events  | count) +
            (agenda['calendar.joy'].events      | count) +
            (agenda['calendar.lizzie'].events   | count) +
            (agenda['calendar.toby'].events     | count)
          }}
