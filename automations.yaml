# =========================
# AUTOMATIONS
# =========================
# -----------------------------------------------
# To-do - Increment completed counter (on complete)
# -----------------------------------------------
- alias: "To-do - Increment completed counter (on complete)"
  id: todo_increment_completed_on_complete
  mode: parallel
  triggers:
    - trigger: event
      event_type: call_service
      event_data: { domain: todo, service: update_item }
  variables:
    svc: "{{ trigger.event.data.service_data }}"
    list_entity: "{{ (svc.entity_id | default([])) | first | default('') }}"
    status: "{{ svc.status | default('') }}"
  conditions:
    - condition: template
      value_template: "{{ status == 'completed' }}"
    - condition: template
      value_template: >
        {{ list_entity in ['todo.family','todo.anthony','todo.joy','todo.lizzie','todo.toby'] }}
  actions:
    - choose:
        - conditions: "{{ list_entity == 'todo.family' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_family_today }
        - conditions: "{{ list_entity == 'todo.anthony' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_anthony_today }
        - conditions: "{{ list_entity == 'todo.joy' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_joy_today }
        - conditions: "{{ list_entity == 'todo.lizzie' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_lizzie_today }
        - conditions: "{{ list_entity == 'todo.toby' }}"
          sequence:
            - service: input_number.increment
              target: { entity_id: input_number.completed_toby_today }

# -----------------------------------------------
# To-do - Decrement completed counter (on uncomplete)
# -----------------------------------------------
- alias: "To-do - Decrement completed counter (on uncomplete)"
  id: todo_decrement_completed_on_uncomplete
  mode: parallel
  triggers:
    - trigger: event
      event_type: call_service
      event_data: { domain: todo, service: update_item }
  variables:
    svc: "{{ trigger.event.data.service_data }}"
    list_entity: "{{ (svc.entity_id | default([])) | first | default('') }}"
    status: "{{ svc.status | default('') }}"
  conditions:
    - condition: template
      value_template: "{{ status == 'needs_action' }}"
    - condition: template
      value_template: >
        {{ list_entity in ['todo.family','todo.anthony','todo.joy','todo.lizzie','todo.toby'] }}
  actions:
    - choose:
        - conditions: "{{ list_entity == 'todo.family' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_family_today }
        - conditions: "{{ list_entity == 'todo.anthony' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_anthony_today }
        - conditions: "{{ list_entity == 'todo.joy' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_joy_today }
        - conditions: "{{ list_entity == 'todo.lizzie' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_lizzie_today }
        - conditions: "{{ list_entity == 'todo.toby' }}"
          sequence:
            - service: input_number.decrement
              target: { entity_id: input_number.completed_toby_today }

# -----------------------------------------------
# To-do - Reset completed counters at midnight (00:00:00)
# -----------------------------------------------
- alias: "To-do - Reset completed counters at midnight"
  id: todo_reset_completed_counters_midnight
  mode: single
  triggers:
    - trigger: time
      at: "00:00:00"
  actions:
    - service: input_number.set_value
      target:
        entity_id:
          - input_number.completed_family_today
          - input_number.completed_anthony_today
          - input_number.completed_joy_today
          - input_number.completed_lizzie_today
          - input_number.completed_toby_today
      data: { value: 0 }

# -----------------------------------------------
# Calendar - Count today's events (all family calendars)
# -----------------------------------------------
- alias: "Calendar - Count today's events (all family calendars)"
  id: calendar_count_events_today
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/15"
    - trigger: time
      at: "00:01:00"
  actions:
    - variables:
        start: "{{ today_at().isoformat() }}"
        end: "{{ (today_at() + timedelta(days=1)).isoformat() }}"
    - service: calendar.get_events
      target:
        entity_id:
          - calendar.family
          - calendar.anthony
          - calendar.joy
          - calendar.lizzie
          - calendar.toby
      data:
        start_date_time: "{{ start }}"
        end_date_time: "{{ end }}"
      response_variable: agenda
    - service: input_number.set_value
      target: { entity_id: input_number.events_today }
      data:
        value: >-
          {{
            (agenda['calendar.family'].events | count)
            + (agenda['calendar.anthony'].events | count)
            + (agenda['calendar.joy'].events | count)
            + (agenda['calendar.lizzie'].events | count)
            + (agenda['calendar.toby'].events | count)
          }}

# -----------------------------------------------
# To-do - Count outstanding due TODAY (all lists)
# -----------------------------------------------
- alias: "To-do - Count outstanding due TODAY (all lists)"
  id: todo_count_outstanding_due_today
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: time
      at: "00:02:00"
  variables:
    today: "{{ now().date().isoformat() }}"
  actions:
    - service: todo.get_items
      target:
        entity_id:
          - todo.family
          - todo.anthony
          - todo.joy
          - todo.lizzie
          - todo.toby
      data: { status: needs_action }
      response_variable: lists
    # Family
    - service: input_number.set_value
      target: { entity_id: input_number.outstanding_family_today }
      data:
        value: >-
          {% set items = (lists['todo.family'].items | list) %}
          {{
            (items
              | selectattr('due', 'defined')
              | selectattr('due','search', today)
              | list
              | count)
           + (items
              | selectattr('due_date','defined')
              | selectattr('due_date','eq', today)
              | list
              | count)
          }}
    # Anthony
    - service: input_number.set_value
      target: { entity_id: input_number.outstanding_anthony_today }
      data:
        value: >-
          {% set items = (lists['todo.anthony'].items | list) %}
          {{
            (items
              | selectattr('due', 'defined')
              | selectattr('due','search', today)
              | list
              | count)
           + (items
              | selectattr('due_date','defined')
              | selectattr('due_date','eq', today)
              | list
              | count)
          }}
    # Joy
    - service: input_number.set_value
      target: { entity_id: input_number.outstanding_joy_today }
      data:
        value: >-
          {% set items = (lists['todo.joy'].items | list) %}
          {{
            (items
              | selectattr('due', 'defined')
              | selectattr('due','search', today)
              | list
              | count)
           + (items
              | selectattr('due_date','defined')
              | selectattr('due_date','eq', today)
              | list
              | count)
          }}
    # Lizzie
    - service: input_number.set_value
      target: { entity_id: input_number.outstanding_lizzie_today }
      data:
        value: >-
          {% set items = (lists['todo.lizzie'].items | list) %}
          {{
            (items
              | selectattr('due', 'defined')
              | selectattr('due','search', today)
              | list
              | count)
           + (items
              | selectattr('due_date','defined')
              | selectattr('due_date','eq', today)
              | list
              | count)
          }}
    # Toby
    - service: input_number.set_value
      target: { entity_id: input_number.outstanding_toby_today }
      data:
        value: >-
          {% set items = (lists['todo.toby'].items | list) %}
          {{
            (items
              | selectattr('due', 'defined')
              | selectattr('due','search', today)
              | list
              | count)
           + (items
              | selectattr('due_date','defined')
              | selectattr('due_date','eq', today)
              | list
              | count)
          }}

# -----------------------------------------------
# To-do - Compute "next up" for kids (Toby/Lizzie)
# -----------------------------------------------
- alias: "To-do - Compute 'next up' for kids"
  id: todo_next_up_kids
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: state
      entity_id: [ todo.toby, todo.lizzie ]
  actions:
    - service: todo.get_items
      target:
        entity_id: [ todo.toby, todo.lizzie ]
      data: { status: needs_action }
      response_variable: lists
    - variables:
        pick_next: >-
          {% macro next(list) -%}
          {%- set items = lists[list].items | list -%}
          {%- set today = now().date().isoformat() -%}
          {%- set today_items = items
               | selectattr('due','defined')
               | selectattr('due','match', today ~ '.*')
               | list -%}
          {%- if today_items|count > 0 -%}
            {{ today_items[0].summary }}
          {%- else -%}
            {%- set with_due = items
                 | selectattr('due','defined')
                 | sort(attribute='due')
                 | list -%}
            {%- if with_due|count > 0 -%}
              {{ with_due[0].summary }}
            {%- else -%}
              {{ items[0].summary if items|count > 0 else '' }}
            {%- endif -%}
          {%- endif -%}
          {%- endmacro -%}
    - event: set_var
      event_data:
        next_toby: "{{ pick_next('todo.toby') }}"
        next_lizzie: "{{ pick_next('todo.lizzie') }}"

# -----------------------------------------------
# To-do - Count COMPLETED with due today (per list)
# -----------------------------------------------
- alias: "To-do - Count COMPLETED with due today"
  id: todo_count_completed_due_today
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: time
      at: "00:03:00"
  actions:
    - service: todo.get_items
      target:
        entity_id:
          - todo.family
          - todo.anthony
          - todo.joy
          - todo.lizzie
          - todo.toby
      data: { status: completed }
      response_variable: lists
    - variables:
        today: "{{ now().date().isoformat() }}"
        cnt: >-
          {% macro cnt(eid) -%}
          {{ lists[eid].items
             | selectattr('due','defined')
             | selectattr('due','match', today ~ '.*')
             | list
             | count }}
          {%- endmacro %}
    - service: input_number.set_value
      target: { entity_id: input_number.completed_due_today_family }
      data: { value: "{{ cnt('todo.family')|int }}" }
    - service: input_number.set_value
      target: { entity_id: input_number.completed_due_today_anthony }
      data: { value: "{{ cnt('todo.anthony')|int }}" }
    - service: input_number.set_value
      target: { entity_id: input_number.completed_due_today_joy }
      data: { value: "{{ cnt('todo.joy')|int }}" }
    - service: input_number.set_value
      target: { entity_id: input_number.completed_due_today_lizzie }
      data: { value: "{{ cnt('todo.lizzie')|int }}" }
    - service: input_number.set_value
      target: { entity_id: input_number.completed_due_today_toby }
      data: { value: "{{ cnt('todo.toby')|int }}" }

# -----------------------------------------------
# To-do - Build 'shopping' markdown from Family list
# -----------------------------------------------
- alias: "To-do - Build 'shopping' markdown from Family list"
  id: todo_build_shopping_md
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: state
      entity_id: todo.family
  actions:
    - service: todo.get_items
      target: { entity_id: todo.family }
      data: { status: needs_action }
      response_variable: fam
    - variables:
        items: "{{ fam['todo.family'].items | list }}"
        filtered: >
          {{ items
             | selectattr('description','defined')
             | selectattr('description','search','(?i)#shopping')
             | map(attribute='summary')
             | list }}
        md: >-
          {% if filtered | count == 0 -%}
          _No shopping items._
          {%- else -%}
          **Shopping**
          {%- for t in filtered -%}
          - {{ t }}
          {%- endfor -%}
          {%- endif %}
    - service: input_text.set_value
      target: { entity_id: input_text.shopping_md }
      data: { value: "{{ md }}" }

# -----------------------------------------------
# System - Backend heartbeat
# -----------------------------------------------
- alias: "System - Backend heartbeat"
  id: system_backend_heartbeat
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/1"
  actions:
    - service: input_text.set_value
      target: { entity_id: input_text.backend_heartbeat }
      data:
        value: "{{ now().isoformat() }}"

# -----------------------------------------------
# To-do - Build Leaderboard markdown
# -----------------------------------------------
- alias: "To-do - Build Leaderboard markdown"
  id: todo_build_leaderboard_md
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: state
      entity_id:
        - input_number.completed_family_today
        - input_number.completed_anthony_today
        - input_number.completed_joy_today
        - input_number.completed_lizzie_today
        - input_number.completed_toby_today
        - input_number.outstanding_family_today
        - input_number.outstanding_anthony_today
        - input_number.outstanding_joy_today
        - input_number.outstanding_lizzie_today
        - input_number.outstanding_toby_today
        - input_number.completed_due_today_family
        - input_number.completed_due_today_anthony
        - input_number.completed_due_today_joy
        - input_number.completed_due_today_lizzie
        - input_number.completed_due_today_toby
  actions:
    - variables:
        rows: >
          {% set data = [
            {'name':'Family','c':states('input_number.completed_family_today')|int(0),'o':states('input_number.outstanding_family_today')|int(0),'d':states('input_number.completed_due_today_family')|int(0)},
            {'name':'Anthony','c':states('input_number.completed_anthony_today')|int(0),'o':states('input_number.outstanding_anthony_today')|int(0),'d':states('input_number.completed_due_today_anthony')|int(0)},
            {'name':'Joy','c':states('input_number.completed_joy_today')|int(0),'o':states('input_number.outstanding_joy_today')|int(0),'d':states('input_number.completed_due_today_joy')|int(0)},
            {'name':'Lizzie','c':states('input_number.completed_lizzie_today')|int(0),'o':states('input_number.outstanding_lizzie_today')|int(0),'d':states('input_number.completed_due_today_lizzie')|int(0)},
            {'name':'Toby','c':states('input_number.completed_toby_today')|int(0),'o':states('input_number.outstanding_toby_today')|int(0),'d':states('input_number.completed_due_today_toby')|int(0)}
          ] %}
          {% set sorted = data | sort(attribute='o') | sort(attribute='c', reverse=true) %}
          {{ sorted }}
        md: >-
          {% set hdr = "**🏆 Today’s To‑do Leaderboard** \n_Name — Completed / Due‑today / Outstanding_" %}
          {% set body = "" %}
          {% for r in rows %}
          {% set body = body ~ "\n- **" ~ r.name ~ "** — " ~ r.c ~ " / " ~ r.d ~ " / " ~ r.o %}
          {% endfor %}
          {{ hdr ~ "\n" ~ body }}
    - service: input_text.set_value
      target: { entity_id: input_text.leaderboard_md }
      data: { value: "{{ md }}" }

# -----------------------------------------------
# NEW: Calendar - Next 'Family' upcoming event (feeds heading left)
# -----------------------------------------------
- alias: "Calendar - Next 'Family' upcoming event"
  id: calendar_next_family_event
  mode: single
  triggers:
    - trigger: time_pattern
      minutes: "/5"
    - trigger: time
      at: "00:00:30"
  variables:
    start: "{{ now().isoformat() }}"
    end: "{{ (now() + timedelta(days=7)).isoformat() }}"
  action:
    - service: calendar.get_events
      target: { entity_id: calendar.family }
      data:
        start_date_time: "{{ start }}"
        end_date_time: "{{ end }}"
      response_variable: fam
    - variables:
        items: "{{ fam['calendar.family'].events | list }}"
        next: >-
          {% set nowts = now().timestamp() %}
          {% set sorted = items | sort(attribute='start') %}
          {% for e in sorted %}
          {% set s = as_datetime(e.start).timestamp() %}
          {% if s >= nowts %}
          {{ e }}
          {% break %}
          {% endif %}
          {% endfor %}
    - service: input_text.set_value
      target: { entity_id: input_text.up_next_family_md }
      data:
        value: >-
          {% if next %}
            {% set s = as_datetime(next.start) %}
            {% set tf = '%H:%M' %}
            {% set df = '%a %d %b' %}
            {{ next.summary }} - {{ s.strftime(tf) }} ({{ s.strftime(df) }})
          {% else %}
            No upcoming events
          {% endif %}
